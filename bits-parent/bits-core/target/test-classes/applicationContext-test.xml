<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.1.xsd"
       default-lazy-init="true">


    <description>Spring公共配置</description>

    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
    <context:component-scan base-package="com.ccut">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--定时任务-->
    <task:annotation-driven/>

    <!-- 定义aspectj -->
    <aop:aspectj-autoproxy/>

    <bean id="expertService" class="com.ccut.bits.expert.service.ExpertServiceImp"/>
    <bean id="userAdvice" class="com.ccut.bits.aop.UserAdvice"/>

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.ccut.bits.model"/>
        <property name="configLocation" value="classpath:/mybatisConfiguration.xml"/>
        <!-- 自动扫描domain目录, 省掉Configuration.xml里的手工配置-->
        <property name="configurationProperties">
            <props>
                <!-- mapUnderscoreToCamelCase属性将表中列名的下划线映射为JavaBean属性的驼峰式命名，默认为false -->
                <prop key="mapUnderscoreToCamelCase">true</prop>
            </props>
        </property>
    </bean>

    <!-- 扫描basePackage下所有以@MyBatisRepository标识的接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ccut"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1"/>
        <property name="annotationClass" value="com.ccut.bits.annotation.mybatisScan"/>
    </bean>

    <!-- hibernate validator -->
    <!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>-->

    <bean id="luceneContext" class="com.ccut.bits.lucene.LuceneContext"
          init-method="init"
          destroy-method="destroy"
          depends-on="dataBaseDictionary"
          lazy-init="false"
            >
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:property-placeholder ignore-resource-not-found="true" location="classpath*:/applicationProperties-test.properties"/>
    <beans profile="test">
        <!-- 数据源配置,使用应用内的Tomcat JDBC连接池 -->
        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="maxActive" value="${jdbc.pool.maxActive}"/>
            <property name="maxIdle" value="${jdbc.pool.maxIdle}"/>
            <property name="defaultAutoCommit" value="true"/>
            <property name="testOnBorrow" value="true"/>
            <property name="testOnReturn" value="false"/>
            <property name="testWhileIdle" value="true"/>
            <property name="validationQuery" value="select 1"/>
            <property name="removeAbandonedTimeout" value="600"/>
            <property name="removeAbandoned" value="true"/>
            <property name="timeBetweenEvictionRunsMillis" value="30000"/>
            <property name="minEvictableIdleTimeMillis" value="30000"/>
        </bean>
    </beans>

</beans>